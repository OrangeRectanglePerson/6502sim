package com.example.mcusim;

public class CPU extends Device{

    private short ProgramCounter;

    @SuppressWarnings("FieldCanBeLocal")
    //supress warning generated by this variable for now for it will be used later on.
    private byte DataRead;

    public CPU(){
        //cpu does not require start & end addresses
        //set both to default 0
        this.setStartAddress((short) 0x0000);
        this.setEndAddress((short) 0x0000);
    }

    //cpu takes data fom an address on the bus
    //e.g. reading opcodes from ROM or reading data from RAM
    @Override
    public void activelyRead(short receiveAdr) {
        DataRead = Bus.serveDataFromAdr(receiveAdr);
    }
    //cpu writes data to an address on the bus
    //e.g. writing data to RAM, writing graphics to VRAM, setting flags in sound chip
    @Override
    public void activelyWrite(short requestAdr, byte data) {
        super.activelyWrite(requestAdr, data);
    }

    //data cannot be forcefully read from or written into the cpu
    //these methods should NOT be used
    //(trust in the developer)
    @Override
    public void passivelyRead(short receiveAdr, byte data) {
        //cpu always reads data, data is not pushed into the cpu
    }
    @Override
    public byte readFromAdr(short requestedAdr) {
        //cpu always writes data, nothing should be able to write to it
        return 0;
    }
}
